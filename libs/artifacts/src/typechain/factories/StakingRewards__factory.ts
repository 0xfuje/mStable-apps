/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nexus",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "payer",
        type: "address",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsDistributorArg",
        type: "address",
      },
      {
        internalType: "string",
        name: "_nameArg",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbolArg",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nexus",
    outputs: [
      {
        internalType: "contract INexus",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsDistributor",
        type: "address",
      },
    ],
    name: "setRewardsDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405260006006556000600755600060085560006009553480156200002657600080fd5b5060405162001930380380620019308339810160408190526200004991620000fe565b6001600160601b0319606084901b1660805283806001600160a01b038116620000b85760405162461bcd60e51b815260206004820152601560248201527f4e657875732061646472657373206973207a65726f0000000000000000000000604482015260640160405180910390fd5b6001600160601b0319606091821b811660a05293901b90921660c05260e052506200014f915050565b80516001600160a01b0381168114620000f957600080fd5b919050565b6000806000806080858703121562000114578384fd5b6200011f85620000e1565b93506200012f60208601620000e1565b92506200013f60408601620000e1565b6060959095015193969295505050565b60805160601c60a05160601c60c05160601c60e051611766620001ca60003960008181610245015281816107370152818161078a01526107cd0152600081816102d4015281816103ff0152610a350152600081816103990152610fca01526000818161032601528181610d82015261113401526117666000f3fe608060405234801561001057600080fd5b50600436106101c35760003560e01c806380faa57d116100f9578063b88a802f11610097578063d1af0c7d11610071578063d1af0c7d146103fa578063df136d6514610421578063e9fad8ee1461042a578063ebe2b12b14610432576101c3565b8063b88a802f146103e1578063c8f33c91146103e9578063cd3daf9d146103f2576101c3565b806395d89b41116100d357806395d89b411461038c578063a3f5c1d214610394578063a694fc3a146103bb578063adc9772e146103ce576101c3565b806380faa57d146103515780638b876347146103595780639065714714610379576101c3565b8063313ce5671161016657806369940d791161014057806369940d79146102d257806370a08231146102f857806372f702f3146103215780637b0a47ee14610348576101c3565b8063313ce5671461027a5780633c6b16ab146102945780633f2a5540146102a7576101c3565b806318160ddd116101a257806318160ddd14610223578063197621431461022b5780631be05289146102405780632e1a7d4d14610267576101c3565b80628cc262146101c857806306fdde03146101ee5780630700037d14610203575b600080fd5b6101db6101d63660046114c6565b61043b565b6040519081526020015b60405180910390f35b6101f6610454565b6040516101e591906115fd565b6101db6102113660046114c6565b600b6020526000908152604090205481565b6003546101db565b61023e6102393660046114c6565b6104e2565b005b6101db7f000000000000000000000000000000000000000000000000000000000000000081565b61023e6102753660046115c9565b61050c565b610282601281565b60405160ff90911681526020016101e5565b61023e6102a23660046115c9565b6105fc565b6005546102ba906001600160a01b031681565b6040516001600160a01b0390911681526020016101e5565b7f00000000000000000000000000000000000000000000000000000000000000006102ba565b6101db6103063660046114c6565b6001600160a01b031660009081526004602052604090205490565b6102ba7f000000000000000000000000000000000000000000000000000000000000000081565b6101db60075481565b6101db61082f565b6101db6103673660046114c6565b600a6020526000908152604090205481565b61023e6103873660046114fe565b610842565b6101f661097f565b6102ba7f000000000000000000000000000000000000000000000000000000000000000081565b61023e6103c93660046115c9565b61098c565b61023e6103dc36600461157e565b610999565b61023e6109a7565b6101db60085481565b6101db610a9c565b6102ba7f000000000000000000000000000000000000000000000000000000000000000081565b6101db60095481565b61023e610aae565b6101db60065481565b600061044e82610449610a9c565b610ad1565b92915050565b60018054610461906116ca565b80601f016020809104026020016040519081016040528092919081815260200182805461048d906116ca565b80156104da5780601f106104af576101008083540402835291602001916104da565b820191906000526020600020905b8154815290600101906020018083116104bd57829003601f168201915b505050505081565b6104ea610b78565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b33600080610518610be0565b9092509050811561056e57600982905560088190556001600160a01b0383161561056e576105468383610ad1565b6001600160a01b0384166000908152600b6020908152604080832093909355600a9052208290555b600084116105b75760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b60448201526064015b60405180910390fd5b6105c084610c7d565b60405184815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250505050565b6005546001600160a01b031633146106565760405162461bcd60e51b815260206004820181905260248201527f43616c6c6572206973206e6f7420726577617264206469737472696275746f7260448201526064016105ae565b6000806000610663610be0565b909250905081156106b957600982905560088190556001600160a01b038316156106b9576106918383610ad1565b6001600160a01b0384166000908152600b6020908152604080832093909355600a9052208290555b69d3c21bcecceda100000084106107275760405162461bcd60e51b815260206004820152602c60248201527f43616e6e6f74206e6f746966792077697468206d6f7265207468616e2061206d60448201526b696c6c696f6e20756e69747360a01b60648201526084016105ae565b600654429081106107645761075c7f000000000000000000000000000000000000000000000000000000000000000086611648565b6007556107c3565b6000816006546107749190611687565b90506000600754826107869190611668565b90507f00000000000000000000000000000000000000000000000000000000000000006107b38289611630565b6107bd9190611648565b60075550505b60088190556107f27f000000000000000000000000000000000000000000000000000000000000000082611630565b6006556040518581527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a15050505050565b600061083d42600654610dfd565b905090565b600054610100900460ff168061085b575060005460ff16155b6108be5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105ae565b600054610100900460ff161580156108e9576000805460ff1961ff0019909116610100171660011790555b6108f2866104ea565b61096585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f89018190048102820181019092528781529250879150869081908401838280828437600092019190915250610e1592505050565b8015610977576000805461ff00191690555b505050505050565b60028054610461906116ca565b6109963382610e57565b50565b6109a38282610e57565b5050565b336000806109b3610be0565b90925090508115610a0957600982905560088190556001600160a01b03831615610a09576109e18383610ad1565b6001600160a01b0384166000908152600b6020908152604080832093909355600a9052208290555b336000908152600b60205260409020548015610a9657336000818152600b6020526040812055610a64907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169083610f4e565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486906020016105ee565b50505050565b600080610aa7610be0565b5091505090565b33600090815260046020526040902054610ac790610275565b610acf6109a7565b565b6001600160a01b0382166000908152600a60205260408120548190610af69084611687565b905080610b1d5750506001600160a01b0382166000908152600b602052604090205461044e565b6000610b4882610b42876001600160a01b031660009081526004602052604090205490565b90610fb1565b6001600160a01b0386166000908152600b6020526040902054909150610b6f908290611630565b95945050505050565b610b80610fc6565b6001600160a01b0316336001600160a01b031614610acf5760405162461bcd60e51b815260206004820152601960248201527f4f6e6c7920676f7665726e6f722063616e20657865637574650000000000000060448201526064016105ae565b6000806000610bed61082f565b9050600060085482610bff9190611687565b905080610c13575060095492509050610c79565b600081600754610c239190611668565b90506000610c3060035490565b9050801580610c3d575081155b15610c5357600954849550955050505050610c79565b6000610c5f8383611059565b905080600954610c6f9190611630565b9650939450505050505b9091565b60005462010000900460ff16610cd55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105ae565b6000805462ff00001916815533815260046020526040902054811115610d3d5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f7567682075736572207265776172647300000000000000000060448201526064016105ae565b80600354610d4b9190611687565b60035533600090815260046020526040902054610d69908290611687565b33600081815260046020526040902091909155610db1907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169083610f4e565b60405181815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3506000805462ff0000191662010000179055565b6000818311610e0c5782610e0e565b815b9392505050565b610e2b6000805462ff0000191662010000179055565b8151610e3e9060019060208501906113e6565b508051610e529060029060208401906113e6565b505050565b81600080610e63610be0565b90925090508115610eb957600982905560088190556001600160a01b03831615610eb957610e918383610ad1565b6001600160a01b0384166000908152600b6020908152604080832093909355600a9052208290555b60008411610efa5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b60448201526064016105ae565b610f048585611078565b604080518581523360208201526001600160a01b038716917f9f9e4044c5742cca66ca090b21552bac14645e68bad7a92364a9d9ff18111a1c910160405180910390a25050505050565b6040516001600160a01b038316602482015260448101829052610e5290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526111b2565b6000610e0e8383670de0b6b3a7640000611284565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561102157600080fd5b505afa158015611035573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083d91906114e2565b60008161106e670de0b6b3a764000085611668565b610e0e9190611648565b60005462010000900460ff166110d05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105ae565b6000805462ff0000191690556003546110ea908290611630565b6003556001600160a01b038216600090815260046020526040902054611111908290611630565b6001600160a01b0380841660009081526004602052604090209190915561115c907f0000000000000000000000000000000000000000000000000000000000000000163330846112a3565b6040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350506000805462ff0000191662010000179055565b6000611207826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112db9092919063ffffffff16565b805190915015610e52578080602001905181019061122591906115a9565b610e525760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105ae565b6000816112918486611668565b61129b9190611648565b949350505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610a969085906323b872dd60e01b90608401610f7a565b606061129b848460008585843b6113345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ae565b600080866001600160a01b0316858760405161135091906115e1565b60006040518083038185875af1925050503d806000811461138d576040519150601f19603f3d011682016040523d82523d6000602084013e611392565b606091505b50915091506113a28282866113ad565b979650505050505050565b606083156113bc575081610e0e565b8251156113cc5782518084602001fd5b8160405162461bcd60e51b81526004016105ae91906115fd565b8280546113f2906116ca565b90600052602060002090601f016020900481019282611414576000855561145a565b82601f1061142d57805160ff191683800117855561145a565b8280016001018555821561145a579182015b8281111561145a57825182559160200191906001019061143f565b5061146692915061146a565b5090565b5b80821115611466576000815560010161146b565b60008083601f840112611490578182fd5b50813567ffffffffffffffff8111156114a7578182fd5b6020830191508360208285010111156114bf57600080fd5b9250929050565b6000602082840312156114d7578081fd5b8135610e0e8161171b565b6000602082840312156114f3578081fd5b8151610e0e8161171b565b600080600080600060608688031215611515578081fd5b85356115208161171b565b9450602086013567ffffffffffffffff8082111561153c578283fd5b61154889838a0161147f565b90965094506040880135915080821115611560578283fd5b5061156d8882890161147f565b969995985093965092949392505050565b60008060408385031215611590578182fd5b823561159b8161171b565b946020939093013593505050565b6000602082840312156115ba578081fd5b81518015158114610e0e578182fd5b6000602082840312156115da578081fd5b5035919050565b600082516115f381846020870161169e565b9190910192915050565b600060208252825180602084015261161c81604085016020870161169e565b601f01601f19169190910160400192915050565b6000821982111561164357611643611705565b500190565b60008261166357634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561168257611682611705565b500290565b60008282101561169957611699611705565b500390565b60005b838110156116b95781810151838201526020016116a1565b83811115610a965750506000910152565b6002810460018216806116de57607f821691505b602082108114156116ff57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461099657600080fdfea26469706673582212201a960c8c18d38af3c21501e2dd8621991b2ba8cc33a97cda372c2d77ae43dd2064736f6c63430008020033";

export class StakingRewards__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _nexus: string,
    _stakingToken: string,
    _rewardsToken: string,
    _duration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingRewards> {
    return super.deploy(
      _nexus,
      _stakingToken,
      _rewardsToken,
      _duration,
      overrides || {}
    ) as Promise<StakingRewards>;
  }
  getDeployTransaction(
    _nexus: string,
    _stakingToken: string,
    _rewardsToken: string,
    _duration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nexus,
      _stakingToken,
      _rewardsToken,
      _duration,
      overrides || {}
    );
  }
  attach(address: string): StakingRewards {
    return super.attach(address) as StakingRewards;
  }
  connect(signer: Signer): StakingRewards__factory {
    return super.connect(signer) as StakingRewards__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new utils.Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewards {
    return new Contract(address, _abi, signerOrProvider) as StakingRewards;
  }
}
